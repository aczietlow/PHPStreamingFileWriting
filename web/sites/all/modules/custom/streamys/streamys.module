<?php

/**
 * Implements hook_menu().
 */
function streamys_menu() {
  $items = [];

  $items['streamys/csv'] = [
    'title' => 'Build a csv file locally',
    'access callback' => TRUE,
    'page callback' => 'streamys_csv',
    'page arguments' => [],
    'type' => MENU_NORMAL_ITEM,
  ];

  $items['streamys/csv-stream'] = [
    'title' => 'Stream output to user.',
    'access callback' => TRUE,
    'page callback' => 'streamys_csv_stream',
    'page arguments' => [],
    'type' => MENU_NORMAL_ITEM,
  ];

  $items['streamys/csv-batch-stream'] = [
    'title' => 'Batch stream output to user.',
    'access callback' => TRUE,
    'page callback' => 'streamys_batch_csv_stream',
    'page arguments' => [],
    'type' => MENU_NORMAL_ITEM,
  ];

  $items['streamys/config'] = [
    'title' => 'Config',
    'weight' => -100,
    'description' => 'Description',
    'access callback' => TRUE,
    'page callback' => 'drupal_get_form',
    'page arguments' => ['streamys_config_form'],
    'type' => MENU_NORMAL_ITEM,
  ];

  return $items;
}

function streamys_config_form() {
  $form = [];
  $form['limit'] = [
    '#type' => 'textfield',
    '#title' => 'CSV Size',
    '#default_value' => variable_get('csv_size', 100),
  ];
  $form['submit'] = [
    '#type' => 'submit',
    '#value' => 'submit',
  ];
  return $form;
}


function streamys_config_form_submit($form, &$form_state) {
  variable_set('csv_size', $form_state['values']['limit']);
}

/**
 * Page callback to generate a dummy csv and stream it across the network.
 */
function streamys_csv() {
  global $base_url;
  $limit = variable_get('csv_size', 100);
  $edi_directory_name = 'edi-export-' . 1 . '-' . format_date(REQUEST_TIME, 'custom', 'm-d-Y-Hi');
  $edi_directory_uri = 's3://edi/' . $edi_directory_name;
  $dir = drupal_dirname($edi_directory_uri);
  file_prepare_directory($dir, FILE_CREATE_DIRECTORY);
  $csv_file_uri = $edi_directory_uri . '.csv';

  $fp = fopen($csv_file_uri, 'w');

  $fnames = ['Chris', 'Colin', 'Justin', 'Marley'];
  $lnames = ['Zietlow', 'Crampton', 'Rokisky', 'Boss'];

  fputcsv($fp, ["Last Name", "First Name"]);

  for ($i=0;$i<$limit;$i++) {
    $first = $fnames[array_rand($fnames, 1)];
    $last =  $lnames[array_rand($lnames, 1)];
    fputcsv($fp, [$first, $last]);
  }
  fclose($fp);

  return "<a href='$base_url/sites/default/files/edi/$edi_directory_name.csv'>EDI Download</a>";
}

/**
 * Page callback to generate a dummy csv and stream it across the network.
 */
function streamys_csv_stream() {
  header('Content-type: text/csv; charset=UTF-8');
  header('Content-disposition: attachment; filename=report.csv');
  $fp = fopen('php://output','w');

  $limit = variable_get('csv_size', 100);

  $fnames = ['Chris', 'Colin', 'Justin', 'Marley'];
  $lnames = ['Zietlow', 'Crampton', 'Rokisky', 'Boss'];

  fputcsv($fp, ["Last Name", "First Name"]);

  for ($i=0;$i<$limit;$i++) {
    $first = $fnames[array_rand($fnames, 1)];
    $last =  $lnames[array_rand($lnames, 1)];
    fputcsv($fp, [$first, $last]);
  }
  fclose($fp);
}

function streamys_batch_csv_stream() {
  header('Content-type: text/csv; charset=UTF-8');
  header('Content-disposition: attachment; filename=report.csv');
  $fp = fopen('php://output','w');

  $fnames = ['Chris', 'Colin', 'Justin', 'Marley'];
  $lnames = ['Zietlow', 'Crampton', 'Rokisky', 'Boss'];
  $limit = variable_get('csv_size', 100);

  fputcsv($fp, ["Last Name", "First Name"]);
  $results = [];
  for ($i=0;$i<$limit;$i++) {
    $first = $fnames[array_rand($fnames, 1)];
    $last =  $lnames[array_rand($lnames, 1)];
    $results[] = [
      'first' => $first,
      'last' => $last,
    ];
  }

  $batch = [
    'operations' => [],
    'finished' => 'streamys_batch_csv_finished',
    'title' => t('Build "EDI"'),
    'init_message' => t('Building fake EDI...'),
    'progress_message' => t('Processed @current out of @total.'),
    'error_message' => t('EDI has encountered an error.')
  ];

  foreach ($results as $result) {
    $batch['operations'][] = ['streamys_batch_csv_process', [$result, $fp]];
  }
  batch_set($batch);
  // The path to redirect to when done.
  batch_process('<front>');
}

/**
 * The batch processor.
 */
function streamys_batch_csv_process($result, $fp, &$context) {
  // Do heavy lifting here...
  // Display a progress message...
  fputcsv($fp, [$result['first'], $result['last']]);
  sleep(1);
  $context['message'] = "Now processing..." . $result['first'];
}

/**
 * The batch finish handler.
 */
function streamys_batch_csv_finished($success, $results, $operations) {
  if ($success) {
    drupal_set_message('Fix is complete!');
  }
  else {
    $error_operation = reset($operations);
    $message = t('An error occurred while processing %error_operation with arguments: @arguments', array(
      '%error_operation' => $error_operation[0],
      '@arguments' => print_r($error_operation[1], TRUE)
    ));
    drupal_set_message($message, 'error');
  }
  drupal_set_message(l('Run again', 'my_module/batch_fix'));
}


